x-comment: |
  This compose file is a local ci pipeline
  Run it with:
  ```
  docker compose --file ci.compose.yml up --build
  ```

services:

  # Build the Golang MCP server and copy the binary to a volume
  generate-binary:
    build:
      context: .
      dockerfile_inline: |
        FROM golang:1.24.2-alpine
        WORKDIR /app
        COPY . .
    volumes:
      - go-binaries:/binaries
    command:
      - /bin/sh
      - -c
      - |
        echo "🔵 Building MCP Runner ⏳"
        go mod tidy
        go build
        mkdir -p /binaries
        mv sea-flea /binaries/
        if [ $? -eq 0 ]; then
          echo "🟢 Go binary built and copied to volume successfully"
        else
          echo "🔴 Go build failed"
        fi
        
  # Build the WASM plugin and copy the wasm file to a volume
  build-about-wasm-plugin:
    build:
      context: ./plugins/about
      dockerfile_inline: |
        FROM tinygo/tinygo:0.37.0
        USER root
        WORKDIR /app
        COPY . .
    volumes:
      - go-binaries:/binaries
    command:
      - /bin/sh
      - -c
      - |
        echo "🟣 Building wasm plugin ⏳"
        go mod tidy
        tinygo build -scheduler=none --no-debug \
          -o about.wasm \
          -target wasi main.go
          mkdir -p /binaries
          mv about.wasm /binaries/
        if [ $? -eq 0 ]; then
          echo "🟢 wasm plugin built and copied to volume successfully"
        else
          echo "🔴 wasm build failed"
        fi
    depends_on:
      generate-binary:
        condition: service_completed_successfully

  # Call the resources/list method on the about plugin
  test-about-resources-list:
    image: golang:1.24.2-alpine
    volumes:
      - go-binaries:/binaries
    command:
      - /bin/sh
      - -c
      - |
        apk add --no-cache jq
        cd /binaries

        cat > mcp_test_resources_list.jsonl << 'EOF'
        {
            "jsonrpc": "2.0", 
            "id": 0, 
            "method": "initialize", 
            "params": {"protocolVersion": "2024-11-05", "capabilities": {}, "clientInfo": {"name": "test", "version": "1.0.0"}}
        }
        {
            "jsonrpc": "2.0", 
            "method": "notifications/initialized"
        }
        {
            "jsonrpc": "2.0", 
            "id": 2, 
            "method": "resources/list", 
            "params": {}
        }
        EOF
        cat mcp_test_resources_list.jsonl | ./sea-flea --transport stdio --debug --plugins ./ | jq -c '.' | jq -s '.'
        if [ $? -eq 0 ]; then
          echo "🟢 Test passed successfully"
        else
          echo "🔴 Test failed"
        fi

    depends_on:
      build-about-wasm-plugin:
        condition: service_completed_successfully

  # Call the resources/read method on the about plugin
  test-about-resources-read:
    image: golang:1.24.2-alpine
    volumes:
      - go-binaries:/binaries
    environment:
      - WASM_MESSAGE="Sea Flea"
      - WASM_VERSION="0.0.0"
    command:
      - /bin/sh
      - -c
      - |
        apk add --no-cache jq
        cd /binaries

        cat > mcp_test_resources_read.jsonl << 'EOF'
        {
            "jsonrpc": "2.0", 
            "id": 0, 
            "method": "initialize", 
            "params": {"protocolVersion": "2024-11-05", "capabilities": {}, "clientInfo": {"name": "test", "version": "1.0.0"}}
        }
        {
            "jsonrpc": "2.0", 
            "method": "notifications/initialized"
        }
        {
            "jsonrpc": "2.0", 
            "id": 2, 
            "method": "resources/read", 
            "params": {
                "uri": "about:///sea-flea"
            }
        }
        EOF

        cat mcp_test_resources_read.jsonl | ./sea-flea --transport stdio --debug --plugins ./ --settings '{"project":"sea-flea", "id":"1212"}' | jq -c '.' | jq -s '.'
        if [ $? -eq 0 ]; then
          echo "🟢 Test passed successfully"
        else
          echo "🔴 Test failed"
        fi

    depends_on:
      build-about-wasm-plugin:
        condition: service_completed_successfully


  build-mcp-server-image:
    image: sea-flea:ci-cemo
    build:
      context: .
      dockerfile: compose.Dockerfile
    depends_on:
      test-about-resources-list:
        condition: service_completed_successfully
      test-about-resources-read:
        condition: service_completed_successfully
        
# TODO add MCP requests tests with the image
# TODO add image publication to Docker Hub

volumes:
  go-binaries:
    name: go-binaries
